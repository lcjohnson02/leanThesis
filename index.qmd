# Preface {.unnumbered}
\pagenumbering{arabic}

This thesis is intended to address the potential that the lean programming language has in aiding with the verification of mathematical proofs. Lean was developed as a functional programming language with the intent that it could be used for theorem proving. Development on the language started in 2013 and has now seen four different fully released versions. I would recommend that while reading this thesis, you download lean and put my code onto your own machine to see how it works. I have included a file on my github repository which contains code for each of the examples I put into the "Lean as a Theorem Prover" section of the thesis. The `Mathlib` package is not contained within this repository, so in order to see my examples for yourself, you will need to copy the examples into your own lean project. While I have done my best to show the language in a way that displays both its positive and negative aspects, the best way to get a grasp for that will be to try it out for yourself. Instructions on how to install a copy of lean can be found [here](https://lean-lang.org/lean4/doc/quickstart.html).

If you find this language interesting and would like to learn more, the textbook [How To Prove It With Lean](https://djvelleman.github.io/HTPIwL/) is a great starting point, and the textbook [Mathematics in Lean](https://leanprover-community.github.io/mathematics_in_lean/index.html) goes into further detail on some higher level topics such as calculus and topology. Lean also has a dedicated forum on [Zulip](https://leanprover.zulipchat.com) where other users can help address any questions regarding the language. I used the forum a few times while working on this project, and the feedback I recieved was quite helpful.